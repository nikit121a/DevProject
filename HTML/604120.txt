We're trying to implement functionality where clicking on the Label (and only the Label) of a LayoutItem would copy the contents of the associated contents of the LayoutItem. I've tried a few things, but am not getting the behavior I'm looking for.
// Note: I have a public CopyTitleToClipboard method in my ViewModel that sets the clipboard contents to Entity.Title. If there is a way to just copy the contents of the associated LayoutItem that would suffice.
* Adding EventToCommand to the LayoutItem is the closest I've gotten. This does hit my CopyTitleToClipboard method, but the drawback is this fires if someone clicks near the edit field but not in it. So if they're clicking around near the TextEdit the event might mistakenly fire if their mouse lands within the bounds of the LayoutItem but outside of the TextEdit. I don't know how often my users would manage to find that little space above and below the TextEdit, but it would be disruptive to them if it happened unexpectedly.
* Trying to set it just to the label gives me the error "A property element cannot be the direct content of another property element."
* By setting the Label contents to a TextBox I am able to customize the label to change the mouse to a hand and underline it to indicate that it is clickable. In this approach, the EventToCommand it not firing, or at least my CopyTitleToClipboard method on the ViewModel isn't firing.
Any guidance on an approach to take would be appreciated.
