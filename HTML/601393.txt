I am trying to find a way to use the Report Designer against a larger data base (~10 million records) when I have a separated data access layer.  I have tried using an ObjectDataSource, but that doesn't seem to pass the filter back to the database even when I give it an IQueryable (I have a controller method that returns the IQueryable, and the ObjectDataSource's data source and data member point to that method).  I have also looked at the EFDataSource control, but because our data access layer encapsulates the EF access, all I get back is an IQueryable.  The GridView control seems to work fine with the LinqServerModeDataSource, but I can't seem to find something comparable that works for reports.  I looked at the SqlQuery approach, but that seems to rely on being able to hard-code parameters into the reports to match parameters in the query, which can't really be expected when end-users are using the Report Designer to build their own reports and giving their parameters custom names.
Is there something I'm missing, or how should reporting against large datasets with client-accessible designers be done?   I'd like to be able to just take the filter expression on the report, apply it against the IQueryable somehow, and then set that as the data used by the report, but I don't seem to be able to find a good way to map a filter expression onto an IQueryable.  The LinqServerModeDataSource obviously does it, but I don't know if that ability is exposed anywhere that I can take advantage of.
