Hi there. I recently upgraded my project to version 16.2. Everything works fine locally or if I run the application from within visual studio 2017. However when I deploy a release build to another machine I get the following error:
 - <Event xmlns="
">
   - <System>
     <Provider Name="
"  /> 
    <EventID  Qualifiers="
">1026</EventID> 
    <Level>2</Level> 
    <Task>0</Task> 
    <Keywords>0x80000000000000</Keywords> 
    <TimeCreated SystemTime="
" /> 
    <EventRecordID>154088</EventRecordID> 
    <Channel>Application</Channel> 
    <Computer>HQ-DEV-TS-01.planetpinnacle.com</Computer> 
    <Security />  
   </System>
  - <EventData>
     <Data>Application: EventImporter.Manager.exe Framework Version: v4.0.30319  Description: The process was terminated due to an unhandled exception. Exception  Info: System.IO.FileNotFoundException Stack: at  System.Reflection.RuntimeAssembly._nLoad(System.Reflection.AssemblyName,  System.String, System.Security.Policy.Evidence,  System.Reflection.RuntimeAssembly, System.Threading.StackCrawlMark ByRef,  IntPtr, Boolean, Boolean, Boolean) at  System.Reflection.RuntimeAssembly.nLoad(System.Reflection.AssemblyName,  System.String, System.Security.Policy.Evidence,  System.Reflection.RuntimeAssembly, System.Threading.StackCrawlMark ByRef,  IntPtr, Boolean, Boolean, Boolean) at  System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(System.Reflection.AssemblyName,  System.Security.Policy.Evidence, System.Reflection.RuntimeAssembly,  System.Threading.StackCrawlMark ByRef, IntPtr, Boolean, Boolean, Boolean) at  System.Reflection.RuntimeAssembly.InternalLoad(System.String,  System.Security.Policy.Evidence, System.Threading.StackCrawlMark ByRef, IntPtr,  Boolean) at System.Reflection.RuntimeAssembly.InternalLoad(System.String,  System.Security.Policy.Evidence, System.Threading.StackCrawlMark ByRef, Boolean)  at System.Reflection.Assembly.Load(System.String) at  DevExpress.Utils.AssemblyHelper.GetAssembly(System.String) at  DevExpress.Xpf.Core.Theme.GetAssembly() at  DevExpress.Xpf.Core.Theme.get_Assembly() at  DevExpress.Xpf.Core.ThemedElementsDictionary.AddThemeAssembly(System.String,  System.Collections.Generic.List`1<System.String>) at  DevExpress.Xpf.Core.ThemedElementsDictionary.ForceThemeKeysLoading(System.String)  at DevExpress.Xpf.Core.ThemeManager.ChangeTheme(System.Windows.DependencyObject,  System.String, Boolean, Boolean, System.String) at  DevExpress.Xpf.Core.ThemeManager.ThemeNamePropertyChanged(System.Windows.DependencyObject,  System.Windows.DependencyPropertyChangedEventArgs) at  System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.DependencyObject.NotifyPropertyChange(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.DependencyObject.UpdateEffectiveValue(System.Windows.EntryIndex,  System.Windows.DependencyProperty, System.Windows.PropertyMetadata,  System.Windows.EffectiveValueEntry, System.Windows.EffectiveValueEntry ByRef,  Boolean, Boolean, System.Windows.OperationType) at  System.Windows.DependencyObject.SetValueCommon(System.Windows.DependencyProperty,  System.Object, System.Windows.PropertyMetadata, Boolean, Boolean,  System.Windows.OperationType, Boolean) at  System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,  System.Object) at  DevExpress.Xpf.Core.ThemeManager.DevExpress.Xpf.Utils.Themes.IThemeManager.SetThemeName(System.Windows.DependencyObject,  System.String) at  DevExpress.Xpf.Utils.Themes.GlobalThemeHelper.SetGlobalTheme(System.Windows.FrameworkElement)  at  DevExpress.Xpf.Utils.Themes.GlobalThemeHelper.AssignApplicationThemeName(System.Windows.FrameworkElement)  at DevExpress.Xpf.Utils.Themes.WindowTracker.DoWork(System.Object) at  DevExpress.Xpf.Utils.Themes.WindowTracker.<.cctor>b__0(System.Windows.DependencyObject,  System.Windows.DependencyPropertyChangedEventArgs) at  System.Windows.PropertyChangedCallback.Invoke(System.Windows.DependencyObject,  System.Windows.DependencyPropertyChangedEventArgs) at  System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.DependencyObject.NotifyPropertyChange(System.Windows.DependencyPropertyChangedEventArgs)  at  System.Windows.DependencyObject.UpdateEffectiveValue(System.Windows.EntryIndex,  System.Windows.DependencyProperty, System.Windows.PropertyMetadata,  System.Windows.EffectiveValueEntry, System.Windows.EffectiveValueEntry ByRef,  Boolean, Boolean, System.Windows.OperationType) at  System.Windows.DependencyObject.SetValueCommon(System.Windows.DependencyProperty,  System.Object, System.Windows.PropertyMetadata, Boolean, Boolean,  System.Windows.OperationType, Boolean) at  System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,  System.Object) at  System.Windows.Controls.ContentControl.set_Content(System.Object) at  DevExpress.Xpf.Core.DXSplashScreen+SplashScreenContainer+<>c__DisplayClass32.<InternalThreadEntryPoint>b__2d(System.Func`2<System.Object,System.Object>)  at DevExpress.Mvvm.Native.MayBe.Do[[System.__Canon, mscorlib, Version=4.0.0.0,  Culture=neutral, PublicKeyToken=b77a5c561934e089]](System.__Canon,  System.Action`1<System.__Canon>) at  DevExpress.Xpf.Core.DXSplashScreen+SplashScreenContainer.InternalThreadEntryPoint(System.Object)  at System.Threading.ThreadHelper.ThreadStart_Context(System.Object) at  System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext,  System.Threading.ContextCallback, System.Object, Boolean) at  System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,  System.Threading.ContextCallback, System.Object, Boolean) at  System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext,  System.Threading.ContextCallback, System.Object) at  System.Threading.ThreadHelper.ThreadStart(System.Object)</Data>  
   </EventData>
   </Event>
Any ideas what is going on here? It seems like the dlls are copied correctly.... 
