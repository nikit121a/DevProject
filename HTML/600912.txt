I have a model with a DateTimeOffset property called CreateDate which shows when the user created a record.  In my model, I also expose an app-server-computed column that takes the logged-in user's physical location, determines the time zone, and converts the CreateDate property to a CreateDateUserTime property that is of DateTime type, and in the user's correct time.  I can then use this column in a GridView to display the proper time for the user.  The problem comes that I can't sort or filter based on this column because the GridView is using EntityServerMode due to the large amount of data in the table, and the column doesn't exist (and can't exist since it relies on the logged in user) in the database.
This column is very important to users in their usage of the grid, and so not being able to sort or filter by it becomes a problem.  My preference would be to have a way to directly sort or filter based on the CreateDateUserTime column.  Barring that, I'd like to display CreateDateUserTime but sort and filter based on the CreateDate column which is in the DB and have a custom converter when applying the filter to convert the entered date/time into the user's timezone.  Finally, if we can't do that, can we at least make it so that we can display the CreateDateUserTime column, but when sorting or filtering on that column it does so against the CreateDate column and we ignore the timezone aspect for now? 
